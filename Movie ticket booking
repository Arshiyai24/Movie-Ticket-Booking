import java.util.*;
class User {
    String username, password;
    List<String> bookingHistory = new ArrayList<>();

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    public boolean login(String u, String p) {
        return username.equals(u) && password.equals(p);
    }

    public void addBooking(String details) {
        bookingHistory.add(details);
    }

    public void viewBookings() {
        System.out.println("\uD83D\uDCDC Your Booking History:");
        if (bookingHistory.isEmpty()) {
            System.out.println("No bookings found.");
        }
        for (String record : bookingHistory) {
            System.out.println("- " + record);
        }
    }
}

class Movie {
    String title;
    String language;
    List<String> showtimes;
    Map<String, Boolean> seats = new LinkedHashMap<>();
    double price;

    public Movie(String title, String language, List<String> showtimes, int seatCount, double price) {
        this.title = title;
        this.language = language;
        this.showtimes = showtimes;
        this.price = price;

        char row = 'A';
        int numPerRow = 10;
        for (int i = 0; i < seatCount; i++) {
            String seat = "" + (char)(row + i / numPerRow) + (i % numPerRow + 1);
            seats.put(seat, true);
        }
    }

    public int getAvailableSeatCount() {
        int count = 0;
        for (boolean available : seats.values()) {
            if (available) count++;
        }
        return count;
    }

    public List<String> getAvailableSeats() {
        List<String> list = new ArrayList<>();
        for (Map.Entry<String, Boolean> entry : seats.entrySet()) {
            if (entry.getValue()) list.add(entry.getKey());
        }
        return list;
    }

    public boolean bookSeat(String seat) {
        if (seats.containsKey(seat) && seats.get(seat)) {
            seats.put(seat, false);
            return true;
        }
        return false;
    }
}

public class MovieTicketBookingSystem {
    static Scanner sc = new Scanner(System.in);
    static List<User> users = new ArrayList<>();
    static List<Movie> movies = new ArrayList<>();
    static User currentUser = null;

    public static void main(String[] args) {
        preloadMovies();
        while (true) {
            System.out.println("\n\uD83C\uDFAC --- Movie Ticket Booking System ---");
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.println("3. Admin Panel");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1 -> registerUser();
                case 2 -> loginUser();
                case 3 -> adminPanel();
                case 4 -> {
                    System.out.println("\uD83D\uDC4B Thank you for using the system!");
                    return;
                }
                default -> System.out.println("‚ùå Invalid choice.");
            }
        }
    }

    static void preloadMovies() {
        movies.add(new Movie("‡Æµ‡Æø‡Æï‡Øç‡Æ∞‡ÆÆ‡Øç", "Tamil", Arrays.asList("10:00 AM", "2:00 PM", "6:00 PM"), 50, 150));
        movies.add(new Movie("RRR", "Telugu", Arrays.asList("11:00 AM", "3:00 PM", "7:00 PM"), 50, 200));
        movies.add(new Movie("KGF: Chapter 2", "Hindi", Arrays.asList("12:00 PM", "4:00 PM", "8:00 PM"), 50, 250));
        movies.add(new Movie("Jawan", "Hindi", Arrays.asList("10:30 AM", "1:30 PM", "5:30 PM"), 40, 180));
        movies.add(new Movie("PS2", "Tamil", Arrays.asList("9:00 AM", "12:00 PM", "6:00 PM"), 45, 160));
        movies.add(new Movie("Avengers: Endgame", "English", Arrays.asList("10:00 AM", "2:00 PM", "6:00 PM"), 40, 250));
        movies.add(new Movie("Maanagaram", "Tamil", Arrays.asList("11:00 AM", "3:00 PM", "7:00 PM"), 30, 170));

    }

    static void registerUser() {
        System.out.print("Enter username: ");
        String u = sc.nextLine();
        System.out.print("Enter password: ");
        String p = sc.nextLine();
        users.add(new User(u, p));
        System.out.println("‚úÖ Registered successfully!");
    }

    static void loginUser() {
        System.out.print("Username: ");
        String u = sc.nextLine();
        System.out.print("Password: ");
        String p = sc.nextLine();

        for (User user : users) {
            if (user.login(u, p)) {
                currentUser = user;
                System.out.println("‚úÖ Login successful.");
                userMenu();
                return;
            }
        }
        System.out.println("‚ùå Login failed.");
    }

    static void userMenu() {
        while (true) {
            System.out.println("\n\uD83C\uDF9FÔ∏è --- User Menu ---");
            System.out.println("1. View Movies");
            System.out.println("2. Book Ticket");
            System.out.println("3. View Booking History");
            System.out.println("4. Logout");
            System.out.print("Choose an option: ");
            int ch = sc.nextInt();
            sc.nextLine();

            switch (ch) {
                case 1 -> listMovies();
                case 2 -> bookTicket();
                case 3 -> currentUser.viewBookings();
                case 4 -> {
                    currentUser = null;
                    return;
                }
                default -> System.out.println("‚ùå Invalid option.");
            }
        }
    }

    static void listMovies() {
        if (movies.isEmpty()) {
            System.out.println("‚ö†Ô∏è No movies available. Please check later.");
            return;
        }
        System.out.println("\n\uD83C\uDF9EÔ∏è Available Movies:");
        for (int i = 0; i < movies.size(); i++) {
            Movie m = movies.get(i);
            System.out.printf("%d. %s (%s) - Showtimes: %s - ‚Çπ%.2f - Seats Left: %d\n",
                    i + 1, m.title, m.language, m.showtimes, m.price, m.getAvailableSeatCount());
        }
    }

    static void bookTicket() {
        if (movies.isEmpty()) {
            System.out.println("‚ùå No movies available to book.");
            return;
        }

        listMovies();
        System.out.print("Select movie (1-" + movies.size() + "): ");
        int movieIndex = sc.nextInt() - 1;
        sc.nextLine();
        if (movieIndex < 0 || movieIndex >= movies.size()) {
            System.out.println("‚ùå Invalid movie choice.");
            return;
        }

        Movie movie = movies.get(movieIndex);

        if (movie.getAvailableSeatCount() == 0) {
            System.out.println("‚ùå No seats available for this movie.");
            return;
        }

        System.out.println("üïí Showtimes:");
        for (int i = 0; i < movie.showtimes.size(); i++) {
            System.out.println((i + 1) + ". " + movie.showtimes.get(i));
        }

        System.out.print("Choose showtime: ");
        int showIndex = sc.nextInt() - 1;
        sc.nextLine();

        if (showIndex < 0 || showIndex >= movie.showtimes.size()) {
            System.out.println("‚ùå Invalid showtime.");
            return;
        }

        System.out.println("ü™ë Available Seats:");
        List<String> availableSeats = movie.getAvailableSeats();
        System.out.println(availableSeats);

        System.out.print("Choose seat number: ");
        String seatChoice = sc.nextLine().toUpperCase();
        if (!movie.bookSeat(seatChoice)) {
            System.out.println("‚ùå Invalid or already booked seat.");
            return;
        }

        System.out.print("Enter payment amount (‚Çπ" + movie.price + "): ");
        double amount = sc.nextDouble();
        if (amount < movie.price) {
            System.out.println("‚ùå Payment failed. Minimum is ‚Çπ" + movie.price + ".");
            return;
        }

        String bookingInfo = "\uD83C\uDFAC " + movie.title + " (" + movie.language + "), Showtime: " +
                movie.showtimes.get(showIndex) + ", Seat: " + seatChoice + ", Amount Paid: ‚Çπ" + movie.price;
        currentUser.addBooking(bookingInfo);
        System.out.println("‚úÖ Booking Confirmed!");
        System.out.println(bookingInfo);
    }

    static void adminPanel() {
        System.out.print("\uD83D\uDD10 Admin Password: ");
        String pass = sc.nextLine();
        if (!pass.equals("admin123")) {
            System.out.println("‚ùå Access Denied.");
            return;
        }

        while (true) {
            System.out.println("\n\uD83D\uDEE0Ô∏è --- Admin Panel ---");
            System.out.println("1. Add Movie");
            System.out.println("2. View All Movies");
            System.out.println("3. Exit Admin Panel");
            System.out.print("Choose option: ");
            int ch = sc.nextInt();
            sc.nextLine();

            switch (ch) {
                case 1 -> addMovie();
                case 2 -> listMovies();
                case 3 -> { return; }
                default -> System.out.println("‚ùå Invalid option.");
            }
        }
    }

    static void addMovie() {
        System.out.print("Enter movie title: ");
        String title = sc.nextLine();
        System.out.print("Enter movie language (e.g., Tamil, Telugu, Hindi): ");
        String language = sc.nextLine();
        System.out.print("Enter showtimes (comma separated): ");
        String[] times = sc.nextLine().split(",");
        System.out.print("Enter available seats: ");
        int seats = sc.nextInt();
        System.out.print("Enter price: ");
        double price = sc.nextDouble();
        sc.nextLine();

        movies.add(new Movie(title, language, Arrays.asList(times), seats, price));
        System.out.println("‚úÖ Movie added.");
    }
}
